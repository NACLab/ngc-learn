=======
History
=======

0.1.0 (2022–05–05)
— — — — — — — — -
 * First public release.

0.2.0 (2022–05–09)
— — — — — — — — -
  * Major updated release.
  * Changes include: edits to API, inclusion/writing of
    demonstrations 4 and 5, and a revamped engine core to utilize a configurable
    static graph optimization/framework to obtain a 5-7.5 times speedup of
    simulated neural dynamics.

0.3.0-alpha (2022–05–21)
— — — — — — — — -
  * NGCGraph .compile() further tweaked to use an injection/clamping look-up
    system to allow for dynamic changes to occur w/in a static graph compiled
    simulated NGC system
  * Cable API slightly modified to increase flexiblity (demonstrations and
    tests modified to reflect updated API)
  * Demonstration 6 released showcasing how to use ngc-learn to construct/fit a
    restricted Boltzmann machine

0.4.0-alpha (2022–05–25)
— — — — — — — — -
 * Harmonium written into model museum
 * "demonstrations" have been renamed to "walkthroughs" 
 * tutorial 1 written/provided
 * nodes-and-cables system upgraded/polished; incremental simulation centrally supported
 * infinite-mnist data generating process integrated into experimental

0.5.0-alpha (2022-07-02)
— — — — — — — — -
  * Spiking nodes (LIF and ELIF) support implemented as core nodes
  * networkx support provided in experimental auxiliary folder for op-graph visualization
  * Walkthrough 7 written to demonstrate how to train a spiking network with error-Hebbian feedback

0.9.9 (2023-10-15; pre-release dev branch)
— — — — — — — — -
  * ngc-learn backend re-engineered to be pure Jax
  * LIF, quad-LIF spiking cells, as well as a set of graded neuronal cells, integrated
  * exponential STDP synaptic plasticity integrated
  * power-law STDP synaptic plasticity integrated
  * docs rebuilts/revised to adhere to new ngc-learn nodes-and-cables simulator/controller backend -- ngcsimlib

1.0.0-beta, 1.0.1-beta, 1.0.2-beta (beta release of migrated/JAX/ngcsimlib version)
— — — — — — — — -
  * backend migration/revision finished; ngc-learn now depends on ngc-sim-lib (ngcsimlib)
  * tutorials updated reflected
  * STDP is now first-class citizen

1.1.0-beta
— — — — — — — — -
  * rewrite of framework to adhere to revised ngc-sim-lib
  * simple starting point for lava support
  * new adex, wtas, and event-based stdp components integrated
  * all current tutorials written
  * clean-up of utility sub-package files
  * minor clean-up, revisions, bug fixes and doc-string updates
  * model museum updates reflect current state of ngc-learn/sim-lib

2.0.0
— — — — — — — — -
  * upgrade of framework/components to integrate w/ upgrade ngc-sim-lib
  * clean-up and additions to utils, including analysis probes (nonlinear attention, linear model) and image patching tools
  * upgrade/clean-up of ode_utils integration backend (includes rk4 now), addition of ode tools
  * now features in-built conv/deconv support and several hebbian/stdp synaptic components for conv/deconv
  * integration of hodgkin-huxley cell
  * integration of phasor cell, resonate-and-fire cell
  * integration and support for short-term plasticity/dynamic synapse component, modulated stdp
  * error cells revised to be more flexible (multivariate gaussian/laplacian/bernoulli)
  * addition of sindy tutorial in docs
  * integration of reinforce-synapse, block/partitioned synapse component ("patched-synapse")
  * basic unit-tests (pytest framework) integrated to support dev
  * includes support for Intel's lava-nc emulator (several spiking/stdp components that play with ngc-lava)
